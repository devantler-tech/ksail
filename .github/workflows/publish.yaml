name: Publish

on:
  push:
    tags:
      - "v*.*.*"
    branches: main
  workflow_dispatch:

jobs:
  publish-github:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4.0.0
      - name: Get version from tag
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${{ steps.version.outputs.version }}
      - name: Add GitHub Packages as NuGet Source
        run: dotnet nuget add source --username devantler --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/devantler/index.json"
      - name: Push to GitHub Packages
        run: dotnet nuget push **/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
  publish-nuget:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4.0.0
      - name: Get version from tag
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${{ steps.version.outputs.version }}
      - name: Push to NuGet
        run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
  publish-binaries:
    name: Publish binaries
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: ‚öôÔ∏è Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x.x"
      - name: üîë Add Cert to Keychain
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: üì¶ Publish
        run: |
          version=$(echo "${{ github.ref_name }}" | sed -e 's/v//')
          dotnet publish -c Release -r osx-x64 src/KSail/KSail.csproj /p:Version=$version
          mv src/KSail/bin/Release/net8.0/osx-x64/publish/ksail ksail-darwin-amd64

          dotnet publish -c Release -r osx-arm64 src/KSail/KSail.csproj /p:Version=$version
          mv src/KSail/bin/Release/net8.0/osx-arm64/publish/ksail ksail-darwin-arm64

          dotnet publish -c Release -r linux-x64 src/KSail/KSail.csproj /p:Version=$version
          mv src/KSail/bin/Release/net8.0/linux-x64/publish/ksail ksail-linux-amd64

          dotnet publish -c Release -r linux-arm64 src/KSail/KSail.csproj /p:Version=$version
          mv src/KSail/bin/Release/net8.0/linux-arm64/publish/ksail ksail-linux-arm64
      - name: üîê Sign binaries
        run: |
          codesign --timestamp --sign "Developer ID Application: Nikolai Emil Damm (F2NXL88V7B)" ksail-darwin-amd64 --options=runtime --no-strict --entitlements ./.github/entitlements.xml -f
          codesign --timestamp --sign "Developer ID Application: Nikolai Emil Damm (F2NXL88V7B)" ksail-darwin-arm64 --options=runtime --no-strict --entitlements ./.github/entitlements.xml -f
          codesign --timestamp --sign "Developer ID Application: Nikolai Emil Damm (F2NXL88V7B)" ksail-linux-amd64 --options=runtime --no-strict --entitlements ./.github/entitlements.xml -f
          codesign --timestamp --sign "Developer ID Application: Nikolai Emil Damm (F2NXL88V7B)" ksail-linux-arm64 --options=runtime --no-strict --entitlements ./.github/entitlements.xml -f
      - name: üìú Notarize
        run: |
          echo "Create keychain profile"
          xcrun notarytool store-credentials "notarytool-profile" --apple-id nikolaiemildamm@icloud.com --team-id F2NXL88V7B --password ${{ secrets.APP_SPECIFIC_PASSWORD }}

          echo "Creating temp notarization archive"
          zip -r notarization.zip ksail-darwin-amd64 ksail-darwin-arm64

          echo "Notarize app"
          xcrun notarytool submit "notarization.zip" --keychain-profile "notarytool-profile" --wait
      - name: üì¶ Tar binaries
        run: tar -czf ksail.tar.gz ksail-darwin-amd64 ksail-darwin-arm64 ksail-linux-amd64 ksail-linux-arm64
      - name: üéâ Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ksail-darwin-amd64
            ksail-darwin-arm64
            ksail-linux-amd64
            ksail-linux-arm64
            ksail.tar.gz
      #- name: üç∫ Brew bump core formulas
      #  uses: Homebrew/actions/bump-packages@master
      #  with:
      #    token: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
      #    formulae: |
      #      ksail
      - name: üç∫ Brew tap devantler formulas
        run: brew tap devantler/formulas
      - name: üç∫ Brew bump devantler formulas
        uses: Homebrew/actions/bump-packages@master
        with:
          token: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
          formulae: |
            devantler/formulas/ksail

  publish-docker-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/ksail

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          build-args: |
            DOCKER_METADATA_OUTPUT_VERSION
