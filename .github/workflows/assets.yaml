name: Assets

on:
  schedule:
    - cron: "59 23 * * 5"
  workflow_dispatch:

jobs:
  assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: ⤵️ Get binaries
        run: |
          flux_version_latest=$(curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep tag_name | cut -d '"' -f 4)
          flux_version_current=$(ls -l src/KSail/assets/flux_version_* | cut -d '_' -f 3)
          if [ "$flux_version_latest" != "$flux_version_current" ]; then
            echo "New version of flux found: $flux_version_latest"
            echo "Current version of flux: $flux_version_current"
            echo "Downloading new version of flux"
            curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep browser_download_url | grep darwin_amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/flux_darwin_amd64.tar.gz
            curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep browser_download_url | grep darwin_arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/flux_darwin_arm64.tar.gz
            curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep browser_download_url | grep linux_amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/flux_linux_amd64.tar.gz
            curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep browser_download_url | grep linux_arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/flux_linux_arm64.tar.gz
            curl -s https://api.github.com/repos/fluxcd/flux2/releases/latest | grep browser_download_url | grep linux_arm | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/flux_linux_arm.tar.gz

            echo "Extracting new version of flux"
            tar -xzf src/KSail/assets/flux_darwin_amd64.tar.gz -C src/KSail/assets/
            mv src/KSail/assets/flux src/KSail/assets/flux_darwin_amd64
            tar -xzf src/KSail/assets/flux_darwin_arm64.tar.gz -C src/KSail/assets/
            mv src/KSail/assets/flux src/KSail/assets/flux_darwin_arm64
            tar -xzf src/KSail/assets/flux_linux_amd64.tar.gz -C src/KSail/assets/
            mv src/KSail/assets/flux src/KSail/assets/flux_linux_amd64
            tar -xzf src/KSail/assets/flux_linux_arm64.tar.gz -C src/KSail/assets/
            mv src/KSail/assets/flux src/KSail/assets/flux_linux_arm64
            tar -xzf src/KSail/assets/flux_linux_arm.tar.gz -C src/KSail/assets/
            mv src/KSail/assets/flux src/KSail/assets/flux_linux_arm

            echo "Removing tar.gz files"
            rm src/KSail/assets/flux_darwin_amd64.tar.gz
            rm src/KSail/assets/flux_darwin_arm64.tar.gz
            rm src/KSail/assets/flux_linux_amd64.tar.gz
            rm src/KSail/assets/flux_linux_arm64.tar.gz
            rm src/KSail/assets/flux_linux_arm.tar.gz

            echo "Making new version of flux executable"
            chmod +x src/KSail/assets/flux_darwin_amd64
            chmod +x src/KSail/assets/flux_darwin_arm64
            chmod +x src/KSail/assets/flux_linux_amd64
            chmod +x src/KSail/assets/flux_linux_arm64
            chmod +x src/KSail/assets/flux_linux_arm

            echo "Update version file"
            if [ -f src/KSail/assets/flux_version_${flux_version_current} ]; then
              mv src/KSail/assets/flux_version_${flux_version_current} src/KSail/assets/flux_version_${flux_version_latest}
            else
              touch src/KSail/assets/flux_version_${flux_version_latest}
            fi
          else
            echo "No new version of flux found"
          fi

          k3d_version_latest=$(curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep tag_name | cut -d '"' -f 4)
          k3d_version_current=$(ls -l src/KSail/assets/k3d_version* | cut -d '_' -f 3)
          if [ "$k3d_version_latest" != "$k3d_version_current" ]; then
            echo "New version of k3d found: $k3d_version_latest"
            echo "Current version of k3d: $k3d_version_current"
            echo "Downloading new version of k3d"
            curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep browser_download_url | grep darwin-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/k3d_darwin_amd64
            curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep browser_download_url | grep darwin-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/k3d_darwin_arm64
            curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/k3d_linux_amd64
            curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep browser_download_url | grep linux-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/k3d_linux_arm64
            curl -s https://api.github.com/repos/k3d-io/k3d/releases/latest | grep browser_download_url | grep linux-arm | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/k3d_linux_arm

            echo "Making new version of k3d executable"
            chmod +x src/KSail/assets/k3d_darwin_amd64
            chmod +x src/KSail/assets/k3d_darwin_arm64
            chmod +x src/KSail/assets/k3d_linux_amd64
            chmod +x src/KSail/assets/k3d_linux_arm64
            chmod +x src/KSail/assets/k3d_linux_arm

            echo "Update version file"
            if [ -f src/KSail/assets/k3d_version_${k3d_version_current} ]; then
              mv src/KSail/assets/k3d_version_${k3d_version_current} src/KSail/assets/k3d_version_${k3d_version_latest}
            else
              touch src/KSail/assets/k3d_version_${k3d_version_latest}
            fi
          else
            echo "No new version of k3d found"
          fi

          kubeconform_version_latest=$(curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep tag_name | cut -d '"' -f 4)
          kubeconform_version_current=$(ls -l src/KSail/assets/kubeconform_version* | cut -d '_' -f 3)
          if [ "$kubeconform_version_latest" != "$kubeconform_version_current" ]; then
            echo "New version of kubeconform found: $kubeconform_version_latest"
            echo "Current version of kubeconform: $kubeconform_version_current"
            echo "Downloading new version of kubeconform"
            curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep browser_download_url | grep darwin-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/kubeconform_darwin_amd64.tar.gz
            curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep browser_download_url | grep darwin-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/kubeconform_darwin_arm64.tar.gz
            curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/kubeconform_linux_amd64.tar.gz
            curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep browser_download_url | grep linux-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/kubeconform_linux_arm64.tar.gz
            curl -s https://api.github.com/repos/yannh/kubeconform/releases/latest | grep browser_download_url | grep linux-armv6 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/kubeconform_linux_arm.tar.gz

            echo "Extracting new version of kubeconform"
            tar -xzf src/KSail/assets/kubeconform_darwin_amd64.tar.gz -C src/KSail/assets/ kubeconform
            mv src/KSail/assets/kubeconform src/KSail/assets/kubeconform_darwin_amd64
            tar -xzf src/KSail/assets/kubeconform_darwin_arm64.tar.gz -C src/KSail/assets/ kubeconform
            mv src/KSail/assets/kubeconform src/KSail/assets/kubeconform_darwin_arm64
            tar -xzf src/KSail/assets/kubeconform_linux_amd64.tar.gz -C src/KSail/assets/ kubeconform
            mv src/KSail/assets/kubeconform src/KSail/assets/kubeconform_linux_amd64
            tar -xzf src/KSail/assets/kubeconform_linux_arm64.tar.gz -C src/KSail/assets/ kubeconform
            mv src/KSail/assets/kubeconform src/KSail/assets/kubeconform_linux_arm64
            tar -xzf src/KSail/assets/kubeconform_linux_arm.tar.gz -C src/KSail/assets/ kubeconform
            mv src/KSail/assets/kubeconform src/KSail/assets/kubeconform_linux_arm

            echo "Removing tar.gz files"
            rm src/KSail/assets/kubeconform_darwin_amd64.tar.gz
            rm src/KSail/assets/kubeconform_darwin_arm64.tar.gz
            rm src/KSail/assets/kubeconform_linux_amd64.tar.gz
            rm src/KSail/assets/kubeconform_linux_arm64.tar.gz
            rm src/KSail/assets/kubeconform_linux_arm.tar.gz

            echo "Making new version of kubeconform executable"
            chmod +x src/KSail/assets/kubeconform_darwin_amd64
            chmod +x src/KSail/assets/kubeconform_darwin_arm64
            chmod +x src/KSail/assets/kubeconform_linux_amd64
            chmod +x src/KSail/assets/kubeconform_linux_arm64
            chmod +x src/KSail/assets/kubeconform_linux_arm

            echo "Update version file"
            if [ -f src/KSail/assets/kubeconform_version_${kubeconform_version_current} ]; then
              mv src/KSail/assets/kubeconform_version_${kubeconform_version_current} src/KSail/assets/kubeconform_version_${kubeconform_version_latest}
            else
              touch src/KSail/assets/kubeconform_version_${kubeconform_version_latest}
            fi
          else
            echo "No new version of kubeconform found"
          fi

          talosctl_version_latest=$(curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep tag_name | cut -d '"' -f 4)
          talosctl_version_current=$(ls -l src/KSail/assets/talosctl_version* | cut -d '_' -f 3)
          if [ "$talosctl_version_latest" != "$talosctl_version_current" ]; then
            echo "New version of talosctl found: $talosctl_version_latest"
            echo "Current version of talosctl: $talosctl_version_current"
            echo "Downloading new version of talosctl"
            curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep browser_download_url | grep talosctl-darwin-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/talosctl_darwin_amd64
            curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep browser_download_url | grep talosctl-darwin-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/talosctl_darwin_arm64
            curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep browser_download_url | grep talosctl-linux-amd64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/talosctl_linux_amd64
            curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep browser_download_url | grep talosctl-linux-arm64 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/talosctl_linux_arm64
            curl -s https://api.github.com/repos/siderolabs/talos/releases/latest | grep browser_download_url | grep talosctl-linux-armv7 | cut -d '"' -f 4 | xargs curl -sL -o src/KSail/assets/talosctl_linux_arm

            echo "Making new version of talosctl executable"
            chmod +x src/KSail/assets/talosctl_darwin_amd64
            chmod +x src/KSail/assets/talosctl_darwin_arm64
            chmod +x src/KSail/assets/talosctl_linux_amd64
            chmod +x src/KSail/assets/talosctl_linux_arm64
            chmod +x src/KSail/assets/talosctl_linux_arm

            echo "Update version file"
            if [ -f src/KSail/assets/talosctl_version_${talosctl_version_current} ]; then
              mv src/KSail/assets/talosctl_version_${talosctl_version_current} src/KSail/assets/talosctl_version_${talosctl_version_latest}
            else
              touch src/KSail/assets/talosctl_version_${talosctl_version_latest}
            fi
          else
            echo "No new version of talosctl found"
          fi
      - name: ✍🏻 Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update binaries
          title: Update binaries
          body: |
            This PR updates the binaries used by KSail to the latest version.
          branch: update-binaries
          delete-branch: true
          labels: dependencies
          reviewers: devantler
          assignees: devantler
          signoff: true
